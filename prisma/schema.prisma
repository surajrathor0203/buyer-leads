// prisma/schema.prisma
datasource db {
  provider = "postgresql" // or "mysql" | "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum City {
  CHANDIGARH
  MOHALI
  ZIRAKPUR
  PANCHKULA
  OTHER
}

enum PropertyType {
  APARTMENT
  VILLA
  PLOT
  OFFICE
  RETAIL
}

enum BHK {
  ONE
  TWO
  THREE
  FOUR
  STUDIO
}

enum Purpose {
  BUY
  RENT
}

enum Timeline {
  ZERO_3M     // maps to "0-3m"
  THREE_6M    // maps to "3-6m"
  GT_6M       // maps to ">6m"
  EXPLORING
}

enum Source {
  WEBSITE
  REFERRAL
  WALKIN
  CALL
  OTHER
}

enum Status {
  NEW
  QUALIFIED
  CONTACTED
  VISITED
  NEGOTIATION
  CONVERTED
  DROPPED
}

model User {
  id        String   @id @default(uuid())
  email     String?  @unique
  name      String?
  role      String?  // "user" | "admin"
  buyers    Buyer[]
  createdAt DateTime @default(now())
}

model Buyer {
  id           String        @id @default(uuid())
  fullName     String
  email        String?
  phone        String
  city         City
  propertyType PropertyType
  bhk          BHK?
  purpose      Purpose
  budgetMin    Int?
  budgetMax    Int?
  timeline     Timeline
  source       Source
  status       Status        @default(NEW)
  notes        String?       @db.Text
  tags         String[]      @default([])
  ownerId      String
  owner        User          @relation(fields: [ownerId], references: [id])
  updatedAt    DateTime      @updatedAt
  history      BuyerHistory[]
}

model BuyerHistory {
  id        String   @id @default(uuid())
  buyerId   String
  buyer     Buyer    @relation(fields: [buyerId], references: [id])
  changedBy String
  changedAt DateTime @default(now())
  diff      Json
}
